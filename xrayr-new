#!/usr/bin/env bash
set -euo pipefail
echo "=== XrayR RU All-in-One (VMess:80 + Trojan:443 w/ Auto SSL via Cloudflare DNS-01) ==="
[[ $EUID -ne 0 ]] && { echo "Vui lòng chạy với sudo/root"; exit 1; }

# ========= 0) Nhập thông tin cần thiết =========
read -p "API Host (VD: https://panel.domain.com): " API_HOST
read -p "API Key (NewV2Board/V2Board): " API_KEY
read -p "NodeID VMess (Reality, port 80) [157]: " NODE_VM; NODE_VM=${NODE_VM:-157}
read -p "NodeID Trojan (gRPC+TLS, port 443) [319]: " NODE_TJ; NODE_TJ=${NODE_TJ:-319}
echo "Trojan sẽ dùng SSL thật (Let's Encrypt). Cần domain trỏ A (DNS Only/xám mây) về IP VPS."
read -p "Domain cho Trojan (VD: t1.domain.com): " DOMAIN

# ========= 1) Cloudflare API Token =========
CF_TOKEN_FILE="/root/.cf_token"
if [[ ! -s "$CF_TOKEN_FILE" ]]; then
  echo "Không tìm thấy $CF_TOKEN_FILE. Dán Cloudflare API Token (quyền Zone:DNS Edit) rồi Enter:"
  read -r CF_API_TOKEN_INPUT
  [[ -z "$CF_API_TOKEN_INPUT" ]] && { echo "Token rỗng! Hủy."; exit 1; }
  echo -n "$CF_API_TOKEN_INPUT" > "$CF_TOKEN_FILE"
  chmod 600 "$CF_TOKEN_FILE"
  unset CF_API_TOKEN_INPUT
fi
CF_API_TOKEN="$(cat "$CF_TOKEN_FILE")"

# ========= 2) Cài gói & bật BBR =========
export DEBIAN_FRONTEND=noninteractive
apt update -y
apt install -y curl wget nano jq lsof cron ca-certificates socat
modprobe tcp_bbr || true
cat >/etc/sysctl.d/99-xrayr-bbr.conf <<'EOF'
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
net.ipv4.tcp_fastopen=3
net.ipv4.tcp_mtu_probing=1
net.ipv4.ip_forward=1
net.core.rmem_max=67108864
net.core.wmem_max=67108864
net.ipv4.tcp_rmem=4096 87380 33554432
net.ipv4.tcp_wmem=4096 65536 33554432
net.core.netdev_max_backlog=250000
EOF
sysctl --system >/dev/null

# ========= 3) Cài XrayR =========
bash <(curl -Ls https://raw.githubusercontent.com/wyx2685/XrayR-release/master/install.sh)

# ========= 4) Xin SSL qua Cloudflare DNS-01 =========
CERT_PATH="/etc/XrayR/cert"; mkdir -p "$CERT_PATH"
curl https://get.acme.sh | sh -s email="admin@$DOMAIN" >/dev/null 2>&1 || true
export PATH="$HOME/.acme.sh:$PATH"
systemctl stop xrayr 2>/dev/null || true

export CF_Token="$CF_API_TOKEN"
echo "[•] Yêu cầu chứng chỉ Let's Encrypt (DNS-01 Cloudflare) cho $DOMAIN ..."
~/.acme.sh/acme.sh --issue --dns dns_cf -d "$DOMAIN" --keylength ec-256 --force

~/.acme.sh/acme.sh --install-cert -d "$DOMAIN" --ecc \
  --key-file       "$CERT_PATH/$DOMAIN.key" \
  --fullchain-file "$CERT_PATH/$DOMAIN.crt" \
  --reloadcmd     "systemctl reload xrayr || true"

# Cron tự gia hạn hàng ngày
(crontab -l 2>/dev/null; echo "13 3 * * * $HOME/.acme.sh/acme.sh --cron --home $HOME/.acme.sh > /dev/null") | crontab -

# ========= 5) Tạo config XrayR =========
REALITY_SNI="www.cloudflare.com"
REALITY_SHORT_IDS=$(openssl rand -hex 8)

cat >/etc/XrayR/config.yml <<EOF
Log:
  Level: none
Nodes:
  - # ===== VMess + REALITY (port 80) =====
    PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_VM}
      NodeType: V2ray
      Timeout: 30
    ControllerConfig:
      EnableProxyProtocol: false
      DisableLocalREALITYConfig: false
      EnableREALITY: true
      REALITYConfigs:
        Show: true
        Dest: "${REALITY_SNI}:443"
        ServerNames:
          - "${REALITY_SNI}"
        PrivateKey: ""
        ShortIds:
          - "${REALITY_SHORT_IDS}"
      ListenIP: 0.0.0.0
      ListenPort: 80
      SendIP: 0.0.0.0
      CertConfig:
        CertMode: none

  - # ===== Trojan + gRPC + TLS (port 443) =====
    PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_TJ}
      NodeType: Trojan
      Timeout: 30
      EnableVless: false
    ControllerConfig:
      ListenIP: 0.0.0.0
      ListenPort: 443
      SendIP: 0.0.0.0
      DeviceOnlineMinTraffic: 100
      Transport:
        Type: grpc
        ServiceName: trojan-grpc
      TLSConfig:
        InsecureSkipVerify: false
        EnableTLS: true
      CertConfig:
        CertMode: file
        CertFile: "$CERT_PATH/$DOMAIN.crt"
        KeyFile:  "$CERT_PATH/$DOMAIN.key"
EOF

# ========= 6) Menu quản trị =========
cat >/root/xrayr <<'MENU'
#!/usr/bin/env bash
set -e
while true; do
  clear
  echo "====== XrayR Menu ======"
  echo "1) Xem log (tail 200)"
  echo "2) Sửa /etc/XrayR/config.yml"
  echo "3) Restart XrayR"
  echo "4) Trạng thái dịch vụ"
  echo "5) Uninstall XrayR"
  echo "0) Thoát"
  read -p "Chọn: " c
  case "$c" in
    1) journalctl -u xrayr -e --no-pager | tail -n 200; read -p "Enter để quay lại..." _ ;;
    2) nano /etc/XrayR/config.yml ;;
    3) systemctl restart xrayr ;;
    4) systemctl status xrayr --no-pager; read -p "Enter để quay lại..." _ ;;
    5) xrayr uninstall; exit 0 ;;
    0) exit 0 ;;
    *) echo "Lựa chọn không hợp lệ!"; sleep 1 ;;
  esac
done
MENU
chmod +x /root/xrayr

# ========= 7) Mở cổng nếu dùng UFW =========
if command -v ufw >/dev/null 2>&1; then
  ufw allow 80/tcp || true
  ufw allow 443/tcp || true
fi

# ========= 8) Khởi động =========
systemctl enable xrayr
systemctl restart xrayr

echo
echo "✅ Hoàn tất!"
echo "• VMess-REALITY: cổng 80 (SNI ${REALITY_SNI})"
echo "• Trojan gRPC + TLS: cổng 443 (cert Let's Encrypt)"
echo "• Cert path: $CERT_PATH/$DOMAIN.crt | $CERT_PATH/$DOMAIN.key"
echo "• Menu quản trị: /root/xrayr  (chạy: ./xrayr)"
