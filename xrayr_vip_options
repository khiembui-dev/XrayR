#!/usr/bin/env bash
set -euo pipefail

# =======================
#  CONFIG M·∫∂C ƒê·ªäNH (S·ª¨A T√ôY √ù)
# =======================
API_HOST="https://panel.kingvpn.vn"
API_KEY="khiemdeptrailaso1"

DEFAULT_NODEID_VMESS=157
DEFAULT_NODEID_TROJAN=319
DEFAULT_NODEID_VLESS=157
DEFAULT_NODEID_SS=400

XRAYR_CONFIG="/etc/XrayR/config.yml"
CERT_DIR="/etc/XrayR/cert"
CERT_FILE="$CERT_DIR/node1.test.com.cert"
KEY_FILE="$CERT_DIR/node1.test.com.key"
ACCESS_LOG="/etc/XrayR/access.log"
ERROR_LOG="/etc/XrayR/error.log"

# =======================
#  MENU CH·ªåN GIAO TH·ª®C
# =======================
echo "Ch·ªçn lo·∫°i c√†i ƒë·∫∑t node:"
echo "  1) Ch·ªâ VMess"
echo "  2) Ch·ªâ Trojan (TLS)"
echo "  3) Ch·ªâ VLESS (TLS ‚Äì gRPC)"
echo "  4) VMess + Trojan + VLESS (m·∫∑c ƒë·ªãnh)"
echo "  5) Ch·ªâ Shadowsocks (SS)"
read -p "L·ª±a ch·ªçn [1/2/3/4/5]: " MODE
MODE="${MODE:-4}"

# =======================
#  H·ªéI NODE ID THEO CH·∫æ ƒê·ªò
# =======================
case "$MODE" in
  1)
    read -p "NODE ID VMess (default ${DEFAULT_NODEID_VMESS}): " NODE_VMESS
    NODE_VMESS="${NODE_VMESS:-$DEFAULT_NODEID_VMESS}"
    ;;
  2)
    read -p "NODE ID Trojan (default ${DEFAULT_NODEID_TROJAN}): " NODE_TROJAN
    NODE_TROJAN="${NODE_TROJAN:-$DEFAULT_NODEID_TROJAN}"
    ;;
  3)
    read -p "NODE ID VLESS (TLS ‚Äì gRPC) (default ${DEFAULT_NODEID_VLESS}): " NODE_VLESS
    NODE_VLESS="${NODE_VLESS:-$DEFAULT_NODEID_VLESS}"
    ;;
  4)
    read -p "NODE ID VMess (default ${DEFAULT_NODEID_VMESS}): " NODE_VMESS
    NODE_VMESS="${NODE_VMESS:-$DEFAULT_NODEID_VMESS}"
    read -p "NODE ID Trojan (default ${DEFAULT_NODEID_TROJAN}): " NODE_TROJAN
    NODE_TROJAN="${NODE_TROJAN:-$DEFAULT_NODEID_TROJAN}"
    read -p "NODE ID VLESS (TLS ‚Äì gRPC) (default ${DEFAULT_NODEID_VLESS}): " NODE_VLESS
    NODE_VLESS="${NODE_VLESS:-$DEFAULT_NODEID_VLESS}"
    ;;
  5)
    read -p "NODE ID Shadowsocks (default ${DEFAULT_NODEID_SS}): " NODE_SS
    NODE_SS="${NODE_SS:-$DEFAULT_NODEID_SS}"
    ;;
  *)
    echo "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá"; exit 1;;
esac

# =======================
#  C√ÄI XRAYR
# =======================
echo "[‚Ä¢] C√†i ƒë·∫∑t XrayR‚Ä¶"
bash <(curl -Ls https://raw.githubusercontent.com/wyx2685/XrayR-release/master/install.sh)

# =======================
#  CHU·∫®N B·ªä TH∆Ø M·ª§C & LOG
# =======================
install -d -m 755 /etc/XrayR
install -d -m 755 "$CERT_DIR"
touch "$ACCESS_LOG" "$ERROR_LOG"
chmod 644 "$ACCESS_LOG" "$ERROR_LOG"

# N·∫øu b·∫°n c√≥ CERT th·∫≠t, d√°n ·ªü ƒë√¢y; t·∫°m th·ªùi d√πng placeholder
if [[ ! -s "$CERT_FILE" ]]; then
  cat >"$CERT_FILE" <<'EOF'
-----BEGIN CERTIFICATE-----
MIIEFTCCAv2gAwIBAgIUAgQxloEb6CQRuqmMU4OKDl5wahcwDQYJKoZIhvcNAQEL
BQAwgagxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH
Ew1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBDbG91ZGZsYXJlLCBJbmMuMRswGQYD
VQQLExJ3d3cuY2xvdWRmbGFyZS5jb20xNDAyBgNVBAMTK01hbmFnZWQgQ0EgM2Yz
MGI1MWZkODI0NmI1MDM3ODM3OWJjNTJlNzAzNTUwHhcNMjUxMDEyMTM0NzAwWhcN
MzUxMDEwMTM0NzAwWjAiMQswCQYDVQQGEwJVUzETMBEGA1UEAxMKQ2xvdWRmbGFy
ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALcDsqgGf/mWZwez47K9
BevvfB5vlyUlZfx6jeoIUUXzU+VtSrXvopR7YFwHqXS+bF99VQCVtlxmMZzFkIr6
3ForJ+E2NxO54G3itATcb15QuFGr5mKZvnEcYYI+VSVm3E2msGJjqJjmFkly6k03
84xb76jYsp9bvATkQN8GrkeRg267KMclzWTYk2I2l2rwKpRYwgWVB8z0IYew5pGH
/Vgd07lgLuloUDiy0rgWOktrazbDrNuvYIkMlI+/YiXu4AXwtHWBqwgdtjkU3nip
1qVBNjBIvSE3nxLpV7SkLRsfLU5mFrMycuh7fyHtjnXRl+uwpBKYCrHt/kLJXuCE
mMMCAwEAAaOBuzCBuDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAA
MB0GA1UdDgQWBBRVMFcW5bhf6ZfNOpiT6jxShtrolTAfBgNVHSMEGDAWgBQPJore
iAYMGbaQrtqq2Vzy6G5l4zBTBgNVHR8ETDBKMEigRqBEhkJodHRwOi8vY3JsLmNs
b3VkZmxhcmUuY29tL2ZiOGRiY2VmLWZlMjMtNDBkOS1hYjU2LWM1MTZjMmU4ODFl
Zi5jcmwwDQYJKoZIhvcNAQELBQADggEBAGFflOnc9qG9KdF0qL5sQjoGG4nI/JbQ
01SDqZdI6o8E3b+XUyCG/U7ZT4iU5582ZEGFrOvTEOqRiI69/2F8dkY4u5A72eRS
54ZsPt+YWTegje9it6Qp8mDm1Lk1bpPkS32iVafcwjJkx49ZEH/n276GWFJT7t0N
RazhK3d05L5jP3DckpO/Bu1AhN7oBh23nAj6ZOVUaPiIf2rDhd8CHSx0D7OU3VKH
24HX9jGMJDNhXQbAKBTftnlgMKH42IPBTcOW+LFPRnQn7g20LhcWL+UD9s1+n3tb
OOhV8zKijndCQ4iCNkKGYY/gwpsPacpsmnjo5VmE1zSJNYqiSfSHWns=
-----END CERTIFICATE-----
EOF
fi
if [[ ! -s "$KEY_FILE" ]]; then
  cat >"$KEY_FILE" <<'EOF'
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC3A7KoBn/5lmcH
s+OyvQXr73web5clJWX8eo3qCFFF81PlbUq176KUe2BcB6l0vmxffVUAlbZcZjGc
xZCK+txaKyfhNjcTueBt4rQE3G9eULhRq+Zimb5xHGGCPlUlZtxNprBiY6iY5hZJ
cupNN/OMW++o2LKfW7wE5EDfBq5HkYNuuyjHJc1k2JNiNpdq8CqUWMIFlQfM9CGH
sOaRh/1YHdO5YC7paFA4stK4FjpLa2s2w6zbr2CJDJSPv2Il7uAF8LR1gasIHbY5
FN54qdalQTYwSL0hN58S6Ve0pC0bHy1OZhazMnLoe38h7Y510ZfrsKQSmAqx7f5C
yV7ghJjDAgMBAAECggEAGqTCLK4NkYNw6nEo9AuKwidyVWf/hBvmthQNdwXQ9zMO
grcfik8hxyYTCDLhW6qhUmGHr3ccPmVuUZl9io4s6D+iJapj6E5GOxknBhIlcICl
5NX2y2IAlK0CERkMAk7wQanDwf8qO2A73GOLcsRzg3qa8GTj1ElhnQCx5QYu9yIc
ByJ+N8cyg8SiBr1nmUWf86/0k2GRDrbRb7uewiv4+6JHTdgCnVUUL7cXGGWe2YGi
8Epoagnctc3KWI6jPAb8lZgpP6I2QN1lpqCoz3X4DRpLRhLIYNlqxDR2vTVvyHcq
HDdSckODrBiYsNPQrsTH9bYbNe4kSnxTSUtTQyhy2QKBgQDfYltUJLXp4tE43wi0
lOCWzDiov9eG4KUObIfarrBRf0OlgcBj2V8+d5X8KmPnZLBBgenUqwNFj4hBrf8s
DKBhRt5g+2mCY/EVSeWKYUdbcVIQnRsxnIUfQtt6N77o5ivi6OD3IXahKpmmaEJ5
SGCmMc/9A37/+1gKQxCWsOxMVwKBgQDRvGb8NCzNStUMxXfun7iOdfFZ37IrPgqK
8quD4ekbjrWqGGkgAI/UlXoi9OzdG3gLk5jrhhHbgAl1PmaSmKSwQwk8ATuNeOeG
BYb5uCpV/E2Vc+QKjIK/181j8xxaE8LYHFa2uP1DYkWjj4CYO+r0ZWIXFG2HTVzV
t14TivbTdQKBgQClD56AfGfXHPyQU22xUdjqVJkBSFBPn6sXD2cLVc1/StSHdWrd
3P8dv2uaWxBbKPF8ViycMolGWxrJvXIx8FqJxr4HV37NFGBN5L6yE9OQZBnJoO05
KXjMcrCOjKaKnZmMH5wrwBRSXpIOfjewOqT/6QrQ4EZ1jBmv64JUdwMEHQKBgQDN
hWz1Xrs4QEgdR7OKZYEYOILUqtuQfC8gkUN47Hrcwi9KCrmY3nQSwJb6gj9JO42a
6ntC8BG3ofOirA8fP+zBvC7kWeDddMiLEAd/1PPHZoEwHmwr2hyVmQZvFt+FdS/N
TZe7XfLvgPD0ob5FbxGBg4dnTmE14J1D33eUduv/sQKBgBTyVF/9LcsjuWpfjUSQ
gwkUWwNIsC28S/eVzq2nAeaKmcnsUYYzZH2bb/nFOSu1OnRYKTSsp/XsxKWrPNqw
IpM/YLZcWBd3hNYvOlRrZRdTwXjjvWHuZYfU0b7ZqBqLHmam3wND6He7Za8Jsg15
U76LrPR0mqYuGDyrWTaBLXQw
-----END PRIVATE KEY-----
EOF
fi
chmod 600 "$KEY_FILE" || true
chmod 644 "$CERT_FILE" || true

# =======================
#  H√ÄM APPEND NODE
# =======================
append_vmess() {
cat >>"$XRAYR_CONFIG" <<EOF
  - PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_VMESS}
      NodeType: V2ray
      Timeout: 30
    ControllerConfig:
      ListenIP: 0.0.0.0
      SendIP: 0.0.0.0
      UpdatePeriodic: 10
      EnableDNS: false
      DNSType: AsIs
      DeviceOnlineMinTraffic: 100
      EnableProxyProtocol: false
      DisableLocalREALITYConfig: true
      EnableREALITY: false
EOF
}

append_trojan() {
cat >>"$XRAYR_CONFIG" <<EOF
  - PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_TROJAN}
      NodeType: Trojan
      Timeout: 30
    ControllerConfig:
      ListenIP: 0.0.0.0
      SendIP: 0.0.0.0
      UpdatePeriodic: 10
      EnableDNS: false
      DNSType: AsIs
      DeviceOnlineMinTraffic: 100
      EnableProxyProtocol: false
      DisableLocalREALITYConfig: true
      EnableREALITY: false
      CertConfig:
        CertMode: file
        CertFile: ${CERT_FILE}
        KeyFile: ${KEY_FILE}
EOF
}

append_vless_tls() {
cat >>"$XRAYR_CONFIG" <<EOF
  - PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_VLESS}
      NodeType: V2ray
      Timeout: 30
      EnableVless: true
      VlessFlow: ""               # TLS thu·∫ßn (kh√¥ng REALITY)
    ControllerConfig:
      ListenIP: 0.0.0.0
      SendIP: 0.0.0.0
      UpdatePeriodic: 10
      EnableDNS: false
      DNSType: AsIs
      DeviceOnlineMinTraffic: 100
      EnableProxyProtocol: false
      DisableLocalREALITYConfig: true
      EnableREALITY: false
      CertConfig:
        CertMode: file
        CertFile: ${CERT_FILE}
        KeyFile: ${KEY_FILE}
EOF
}

append_shadowsocks() {
cat >>"$XRAYR_CONFIG" <<EOF
  - PanelType: "NewV2board"
    ApiConfig:
      ApiHost: "${API_HOST}"
      ApiKey: "${API_KEY}"
      NodeID: ${NODE_SS}
      NodeType: Shadowsocks
      Timeout: 30
    ControllerConfig:
      ListenIP: 0.0.0.0
      SendIP: 0.0.0.0
      UpdatePeriodic: 10
      EnableDNS: false
      DNSType: AsIs
      DeviceOnlineMinTraffic: 100
      EnableProxyProtocol: false
      DisableLocalREALITYConfig: true
      EnableREALITY: false
EOF
}

# =======================
#  GHI FILE CONFIG CH√çNH
# =======================
echo "[‚Ä¢] T·∫°o $XRAYR_CONFIG‚Ä¶"
cat >"$XRAYR_CONFIG" <<EOF
Log:
  Level: warning
  AccessPath: ${ACCESS_LOG}
  ErrorPath: ${ERROR_LOG}

ConnectionConfig:
  Handshake: 4
  ConnIdle: 30
  UplinkOnly: 2
  DownlinkOnly: 4
  BufferSize: 64

Nodes:
EOF

# Append theo l·ª±a ch·ªçn
case "$MODE" in
  1) append_vmess ;;
  2) append_trojan ;;
  3) append_vless_tls ;;
  4) append_vmess; append_trojan; append_vless_tls ;;
  5) append_shadowsocks ;;
esac

# =======================
#  MENU QU·∫¢N L√ù NHANH
# =======================
cat >/root/xrayr <<'MENU'
#!/usr/bin/env bash
while true; do
  clear
  echo "====== XrayR Menu ======"
  echo "1) S·ª≠a config (/etc/XrayR/config.yml)"
  echo "2) Restart XrayR"
  echo "3) Xem log (journalctl -u XrayR -e)"
  echo "4) G·ª° XrayR"
  echo "0) Tho√°t"
  echo "========================"
  read -p "Ch·ªçn: " c
  case "$c" in
    1) ${EDITOR:-nano} /etc/XrayR/config.yml ;;
    2) XrayR restart || systemctl restart XrayR ;;
    3) journalctl -u XrayR -e --no-pager | tail -n 200 ; read -p "Nh·∫•n Enter ƒë·ªÉ v·ªÅ menu..." ;;
    4) XrayR uninstall ;;
    0) exit 0 ;;
    *) echo "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!"; sleep 1 ;;
  esac
done
MENU
chmod +x /root/xrayr

# =======================
#  KH·ªûI ƒê·ªòNG L·∫†I D·ªäCH V·ª§
# =======================
echo "[‚Ä¢] Restart XrayR‚Ä¶"
XrayR restart || systemctl restart XrayR

echo
echo "‚úÖ Ho√†n t·∫•t!"
echo "üìÑ Config: $XRAYR_CONFIG"
echo "üìú Log: $ACCESS_LOG , $ERROR_LOG"
echo "üõ†  Menu: /root/xrayr"
